# -*- coding: utf-8 -*-
"""ML.PROJECT.ise.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BPnm1upV0PthuWj62fAMAESu-UZt-Xgz
"""

import matplotlib.pyplot as plt
import pandas as pd
from sklearn.cluster import KMeans

# Example data
data = {
    'Sleep Duration (hrs)': [7.5, 6.8, 8.0, 5.9, 7.2, 6.5, 7.9, 7.3, 6.2, 8.1],
    'Sleep Efficiency (%)': [85, 78, 92, 70, 88, 75, 90, 86, 74, 93]
}
df = pd.DataFrame(data)

# K-Means Clustering
kmeans = KMeans(n_clusters=3)
df['Cluster'] = kmeans.fit_predict(df[['Sleep Duration (hrs)','Sleep Efficiency (%)']])

# Scatter Plot
plt.figure(figsize=(8, 6))
plt.scatter(df['Sleep Duration (hrs)'], df['Sleep Efficiency (%)'], c=df['Cluster'], cmap='viridis')
plt.title("Scatter Plot: Sleep Duration vs Sleep Efficiency")
plt.xlabel("Sleep Duration (hrs)")
plt.ylabel("Sleep Efficiency (%)")
plt.colorbar(label='Cluster')
plt.show()

# Centroid Coordinates (average values for each cluster)
centroids = kmeans.cluster_centers_

# Plot the scatter plot again
plt.figure(figsize=(8, 6))
plt.scatter(df['Sleep Duration (hrs)'], df['Sleep Efficiency (%)'], c=df['Cluster'], cmap='viridis')

# Plot Centroids
plt.scatter(centroids[:, 0], centroids[:, 1], s=200, c='red', marker='X', label='Centroids')
plt.title("Scatter Plot with Centroids: Sleep Duration vs Sleep Efficiency")
plt.xlabel("Sleep Duration (hrs)")
plt.ylabel("Sleep Efficiency (%)")
plt.colorbar(label='Cluster')
plt.legend()
plt.show()

# Example sleep stage data for each user (per cluster)
sleep_stages_data = {
    'Cluster': [0, 1, 2],  # Cluster 0, Cluster 1, Cluster 2
    'Deep Sleep (%)': [30, 20, 40],
    'REM Sleep (%)': [20, 25, 15],
    'Light Sleep (%)': [50, 55, 45]
}

# Create a DataFrame
sleep_stages_df = pd.DataFrame(sleep_stages_data)

# Plot Pie Charts for each cluster
for index, row in sleep_stages_df.iterrows():
    labels = ['Deep Sleep', 'REM Sleep', 'Light Sleep']
    sizes = [row['Deep Sleep (%)'], row['REM Sleep (%)'], row['Light Sleep (%)']]
    plt.figure(figsize=(6, 6))
    plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)
    plt.title(f"Sleep Stages Distribution for Cluster {row['Cluster']}")
    plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
    plt.show()